<?php

namespace Proxies\__CG__\Nucleus\HomeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Reponse extends \Nucleus\HomeBundle\Entity\Reponse implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setMessage($message)
    {
        $this->__load();
        return parent::setMessage($message);
    }

    public function getMessage()
    {
        $this->__load();
        return parent::getMessage();
    }

    public function setQuantite($quantite)
    {
        $this->__load();
        return parent::setQuantite($quantite);
    }

    public function getQuantite()
    {
        $this->__load();
        return parent::getQuantite();
    }

    public function setPrixNitaire($prixNitaire)
    {
        $this->__load();
        return parent::setPrixNitaire($prixNitaire);
    }

    public function getPrixNitaire()
    {
        $this->__load();
        return parent::getPrixNitaire();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setAnnonce(\Nucleus\HomeBundle\Entity\Annonce $annonce)
    {
        $this->__load();
        return parent::setAnnonce($annonce);
    }

    public function getAnnonce()
    {
        $this->__load();
        return parent::getAnnonce();
    }

    public function setUser(\Application\Sonata\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function addImage(\Nucleus\HomeBundle\Entity\Image $image)
    {
        $this->__load();
        return parent::addImage($image);
    }

    public function removeImage(\Nucleus\HomeBundle\Entity\Image $image)
    {
        $this->__load();
        return parent::removeImage($image);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function setPhase(\Nucleus\HomeBundle\Entity\Phase $phase)
    {
        $this->__load();
        return parent::setPhase($phase);
    }

    public function getPhase()
    {
        $this->__load();
        return parent::getPhase();
    }

    public function addGain(\Nucleus\HomeBundle\Entity\Paie $gain)
    {
        $this->__load();
        return parent::addGain($gain);
    }

    public function removeGain(\Nucleus\HomeBundle\Entity\Paie $gain)
    {
        $this->__load();
        return parent::removeGain($gain);
    }

    public function getGain()
    {
        $this->__load();
        return parent::getGain();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'message', 'quantite', 'date', 'annonce', 'user', 'image', 'phase', 'gain');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}