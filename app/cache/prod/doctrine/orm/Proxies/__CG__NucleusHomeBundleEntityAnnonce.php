<?php

namespace Proxies\__CG__\Nucleus\HomeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Annonce extends \Nucleus\HomeBundle\Entity\Annonce implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setLibelle($libelle)
    {
        $this->__load();
        return parent::setLibelle($libelle);
    }

    public function getLibelle()
    {
        $this->__load();
        return parent::getLibelle();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setQuantite($quantite)
    {
        $this->__load();
        return parent::setQuantite($quantite);
    }

    public function getQuantite()
    {
        $this->__load();
        return parent::getQuantite();
    }

    public function setPrixUnitaire($prixUnitaire)
    {
        $this->__load();
        return parent::setPrixUnitaire($prixUnitaire);
    }

    public function getPrixUnitaire()
    {
        $this->__load();
        return parent::getPrixUnitaire();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setTypeAnnonce(\Nucleus\HomeBundle\Entity\TypeAnnonce $typeAnnonce)
    {
        $this->__load();
        return parent::setTypeAnnonce($typeAnnonce);
    }

    public function getTypeAnnonce()
    {
        $this->__load();
        return parent::getTypeAnnonce();
    }

    public function setUser(\Application\Sonata\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setCategorie(\Nucleus\HomeBundle\Entity\Categorie $categorie)
    {
        $this->__load();
        return parent::setCategorie($categorie);
    }

    public function getCategorie()
    {
        $this->__load();
        return parent::getCategorie();
    }

    public function addImage(\Nucleus\HomeBundle\Entity\Image $image)
    {
        $this->__load();
        return parent::addImage($image);
    }

    public function removeImage(\Nucleus\HomeBundle\Entity\Image $image)
    {
        $this->__load();
        return parent::removeImage($image);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function setPhase(\Nucleus\HomeBundle\Entity\Phase $phase)
    {
        $this->__load();
        return parent::setPhase($phase);
    }

    public function getPhase()
    {
        $this->__load();
        return parent::getPhase();
    }

    public function addReponse(\Nucleus\HomeBundle\Entity\Reponse $reponse)
    {
        $this->__load();
        return parent::addReponse($reponse);
    }

    public function removeReponse(\Nucleus\HomeBundle\Entity\Reponse $reponse)
    {
        $this->__load();
        return parent::removeReponse($reponse);
    }

    public function getReponse()
    {
        $this->__load();
        return parent::getReponse();
    }

    public function addPaie(\Nucleus\HomeBundle\Entity\Paie $paie)
    {
        $this->__load();
        return parent::addPaie($paie);
    }

    public function removePaie(\Nucleus\HomeBundle\Entity\Paie $paie)
    {
        $this->__load();
        return parent::removePaie($paie);
    }

    public function getPaie()
    {
        $this->__load();
        return parent::getPaie();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'libelle', 'description', 'quantite', 'prix_unitaire', 'date', 'type_annonce', 'user', 'categorie', 'image', 'phase', 'reponse', 'paie');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}